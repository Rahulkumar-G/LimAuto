version: '3.8'

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Backend API service
  backend:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./book_output:/app/book_output
      - ./logs:/app/logs
      - ./BookLLM/config.yaml:/app/BookLLM/config.yaml
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend development server (for development)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    profiles:
      - development

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - static_files:/usr/share/nginx/html
    depends_on:
      - backend
    profiles:
      - production

volumes:
  redis_data:
  static_files: